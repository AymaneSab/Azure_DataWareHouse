{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DateDim",
						"type": "DatasetReference"
					},
					"name": "DateDim"
				},
				{
					"dataset": {
						"referenceName": "RegionDim",
						"type": "DatasetReference"
					},
					"name": "RegionDim"
				},
				{
					"dataset": {
						"referenceName": "WeathermetricFact",
						"type": "DatasetReference"
					},
					"name": "Weathermetric"
				}
			],
			"sinks": [
				{
					"name": "DateDimension"
				},
				{
					"name": "TreatedRegionDim"
				},
				{
					"name": "TreatedWeatherMetric"
				}
			],
			"transformations": [
				{
					"name": "DateDerivedValues",
					"description": "Year , Month , WeekOfMonth, Extraction "
				}
			],
			"scriptLines": [
				"source(output(",
				"          DateID as string,",
				"          Date as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DateDim",
				"source(output(",
				"          RegionID as integer,",
				"          RegionName as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> RegionDim",
				"source(output(",
				"          DateID as integer,",
				"          RegionID as integer,",
				"          AverageTemperature as integer,",
				"          Humidity as integer,",
				"          WindSpeed as integer,",
				"          Rainfall as integer,",
				"          SunshineHours as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Weathermetric",
				"DateDim derive(Year = toInteger(year(Date)),",
				"          Month = toInteger(month(Date)),",
				"          WeekOfYear = toInteger(weekOfYear(Date))) ~> DateDerivedValues",
				"DateDerivedValues sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     preCommands: [],",
				"     postCommands: []) ~> DateDimension",
				"RegionDim sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TreatedRegionDim",
				"Weathermetric sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TreatedWeatherMetric"
			]
		}
	}
}